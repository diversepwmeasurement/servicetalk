jobs:
  build:
    name: Snapshot JDK ${{ matrix.java }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Code
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Check SNAPSHOT version suffix
      run: if [[ $(cat gradle.properties | grep version= | sed 's/^version=//') =~
        .*-SNAPSHOT ]]; then exit 0; else exit 1; fi
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: zulu
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Print JDK Version
      run: java -version
    - continue-on-error: true
      name: Make gradlew Executable
      run: chmod +x gradlew
    - continue-on-error: true
      env:
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD
          }}
        SONATYPE_TOKEN: ${{ secrets.SONATYPE_TOKEN }}
        SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
      name: Build with Gradle
      run: "# Build arguments to feed to the single gradlew publish command\nif [\
        \ \"${{ matrix.java }}\" = \"8\" ]; then\n  FIRST_GRADLE_TARGETS=\" clean\
        \ check\"\n  SECOND_GRADLE_TARGETS=\" publish\"\nelse\n  FIRST_GRADLE_TARGETS=\"\
        \"\n  SECOND_GRADLE_TARGETS=\"\"\n\n  # Execute the printJavaTargetCompatibility\
        \ task to get the java target compatibility for each subproject\n  # and extract\
        \ the projects that require jdk9+.\n  while read -r line\n  do\n    javaTarget=$(echo\
        \ \"$line\" | sed -e 's/^version: \\(.*\\) name:.*/\\1/g')\n    if [ \"$javaTarget\"\
        \ = \"1.9\" ] || [ \"$javaTarget\" = \"1.10\" ] || [ \"$javaTarget\" -gt \"\
        8\" ] 2> /dev/null\n    then\n      currDir=$(echo \"$line\" | sed -e 's/^version:.*\
        \ name: \\(.*\\)$/\\1/g')\n      FIRST_GRADLE_TARGETS=\"$FIRST_GRADLE_TARGETS\
        \ :$currDir:clean :$currDir:check\"\n      SECOND_GRADLE_TARGETS=\"$SECOND_GRADLE_TARGETS\
        \ :$currDir:publish\"\n    fi\n  done < <(./gradlew printJavaTargetCompatibility)\n\
        fi\n\n# Execute the gradlew command to publish the build\nsudo -E env \"PATH=$PATH\"\
        \ bash -c \"ulimit -l 65536 && ulimit -a && ./gradlew --no-daemon --parallel$FIRST_GRADLE_TARGETS\
        \ && ./gradlew --no-daemon$SECOND_GRADLE_TARGETS\"\n"
    - continue-on-error: true
      if: always()
      name: Publish Test Results
      uses: scacap/action-surefire-report@a2911bd1a4412ec18dde2d93b1758b3e56d2a880
      with:
        check_name: Test Report JDK ${{ matrix.java }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        report_paths: '**/build/test-results/test/TEST-*.xml'
    - continue-on-error: true
      if: always()
      name: Publish Checkstyle Report
      uses: jwgmeligmeyling/checkstyle-github-action@50292990e18466f2c5d95d04ff5fab931254fa5f
      with:
        name: Checkstyle Report JDK ${{ matrix.java }}
        path: '**/build/reports/checkstyle/*.xml'
        token: ${{ secrets.GITHUB_TOKEN }}
    - continue-on-error: true
      if: always()
      name: Publish PMD Report
      uses: jwgmeligmeyling/pmd-github-action@322e346bd76a0757c4d54ff9209e245965aa066d
      with:
        name: PMD Report JDK ${{ matrix.java }}
        path: '**/build/reports/pmd/*.xml'
        token: ${{ secrets.GITHUB_TOKEN }}
    - continue-on-error: true
      if: always()
      name: Publish SpotBugs Report
      uses: jwgmeligmeyling/spotbugs-github-action@b8e2c3523acb34c87f14e18cbcd2d87db8c8584e
      with:
        name: SpotBugs Report JDK ${{ matrix.java }}
        path: '**/build/reports/spotbugs/*.xml'
        token: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix:
        java:
        - 8
        - 11
name: Snapshot Publisher
on:
  repository_dispatch:
    types: trigger-ga___ci-snapshot.yml
